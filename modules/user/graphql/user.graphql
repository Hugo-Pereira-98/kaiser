scalar JSON
scalar BigInt
scalar DateTime

enum UserGender {
  MALE
  FEMALE
}

enum MealType {
  ASSEMBLE
  COOK
  EAT_LEFTOVER
  EAT_OUT
}

enum ActivityLevel {
  Sedentary
  LowActive
  Active
  VeryActive
}

enum WeightGoal {
  Lose
  Maintain
  Gain
}

input MealInput {
  type: MealType!
  quantity: Int!
}

input DailyScheduleInput {
  breakfast: MealInput
  lunch: MealInput
  snack: MealInput
  dinner: MealInput
}

input FamilyScheduleInput {
  monday: DailyScheduleInput
  tuesday: DailyScheduleInput
  wednesday: DailyScheduleInput
  thursday: DailyScheduleInput
  friday: DailyScheduleInput
  saturday: DailyScheduleInput
  sunday: DailyScheduleInput
}

input FamilyMemberInput {
  firstName: String!
  dateOfBirth: DateTime!
  gender: UserGender!
  height: Float!
  weight: Float!
  activityLevel: ActivityLevel!
  weightGoal: WeightGoal!
  isUser: Boolean
}

input FamilyInput {
  name: String!
  numberOfMembers: Int!
  familyMembers: [FamilyMemberInput!]!
  sugar: Boolean
  peanuts: Boolean
  treeNuts: Boolean
  lactose: Boolean
  meat: Boolean
  spicy: Boolean
  bland: Boolean
  flavorful: Boolean
  chinese: Boolean
  japanese: Boolean
  korean: Boolean
  thai: Boolean
  vietnamese: Boolean
  italian: Boolean
  american: Boolean
  mexican: Boolean
  indian: Boolean
  french: Boolean
  german: Boolean
  middleEastern: Boolean
  breakfastAtHome: Boolean
}

input UpdateUserInput {
  id: Int!
  uid: String
  firstName: String
  lastName: String
  email: String
}

input CreateNutrientGuidelinesInput {
  groupName: String!
  ageRange: String!
  sex: String!
  vitaminA: String!
  vitaminC: String!
  vitaminE: String!
  vitaminK: String!
  thiamin: String!
  riboflavin: String!
  niacin: String!
  vitaminB6: String!
  folate: String!
  vitaminB12: String!
  totalFiber: String!
  linoleicAcid: String!
  alphaLinolenicAcid: String!
  protein: String!
  calcium: String!
  copper: String!
  iron: String!
  magnesium: String!
  manganese: String!
  phosphorus: String!
  selenium: String!
  zinc: String!
  potassium: String!
}

input CalculateEnergyExpenditureInput {
  age: Int!
  sex: UserGender!
  group: String!
  height: Float!
  weight: Float!
  activityLevel: String!
  weeksPregnant: Int
}

type Family {
  id: Int!
  name: String!
  numberOfMembers: Int!
  totalCaloriesPerDay: Int
  familyMembers: [FamilyMember]!
}

type FamilyMember {
  id: Int!
  firstName: String!
  dateOfBirth: DateTime!
  gender: UserGender!
  height: Float!
  weight: Float!
  activityLevel: ActivityLevel!
  weightGoal: WeightGoal!
  totalCaloriesPerDay: Int
  individualNutrientRequirement: IndividualNutrientRequirements
}

type IndividualNutrientRequirements {
  id: Int!
  familyMemberId: Int
  nutrientGuidelineId: Int
  vitaminA: BigInt
  vitaminC: BigInt
  vitaminE: BigInt
  vitaminK: BigInt
  vitaminB1: BigInt
  vitaminB2: BigInt
  vitaminB3: BigInt
  vitaminB6: BigInt
  folate: BigInt
  vitaminB12: BigInt
  totalFiber: BigInt
  omega3: BigInt
  omega6: BigInt
  protein: BigInt
  calcium: BigInt
  copper: BigInt
  iron: BigInt
  magnesium: BigInt
  manganese: BigInt
  phosphorus: BigInt
  selenium: BigInt
  zinc: BigInt
  potassium: BigInt
}

type User {
  id: Int!
  uid: String!
  email: String!
  firstName: String
  lastName: String
  gender: UserGender
  birthdate: DateTime
  emailVerifiedAt: DateTime
  needUpdatePassword: Boolean!
  isActive: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type MessageResponse {
  message: String!
}

type Response {
  message: String!
}

type FamilySchedule {
  id: Int!
  familyId: Int!
  monday: JSON
  tuesday: JSON
  wednesday: JSON
  thursday: JSON
  friday: JSON
  saturday: JSON
  sunday: JSON
}

type NutrientGuidelines {
  id: Int!
  groupName: String!
  ageRange: String!
  sex: String!
  vitaminA: String
  vitaminC: String
  vitaminE: String
  vitaminK: String
  thiamin: String
  riboflavin: String
  niacin: String
  vitaminB6: String
  folate: String
  vitaminB12: String
  totalFiber: String
  linoleicAcid: String
  alphaLinolenicAcid: String
  protein: String
  calcium: String
  copper: String
  iron: String
  magnesium: String
  manganese: String
  phosphorus: String
  selenium: String
  zinc: String
  potassium: String
}

type EnergyExpenditureResult {
  totalEnergyExpenditure: Float!
}

type Week {
  id: Int
  name: String
  monday: DateTime
  tuesday: DateTime
  wednesday: DateTime
  thursday: DateTime
  friday: DateTime
  saturday: DateTime
  sunday: DateTime
}

type WeekMealPlan {
  week: Week!
  mealPlan: FamilyMealPlan
}

type FamilyMealPlan {
  id: Int
  familyId: Int
  weekId: Int
  monday: JSON
  tuesday: JSON
  wednesday: JSON
  thursday: JSON
  friday: JSON
  saturday: JSON
  sunday: JSON
}

type Query {
  users: [User]!
  findUser(id: Int!): User
  user: User!
  family: Family
  getFamilySchedule: FamilySchedule
  getFamilyMealPlans: [WeekMealPlan]!
  getFamilyMembers: [FamilyMember]!
  getWeekRange: [Week]!
  fetchMealPlanForWeek(weekName: String!): WeekMealPlan!
}

type Mutation {
  updateUser(input: UpdateUserInput!): User!
  createNutrientGuidelines: [NutrientGuidelines]!
  createRecipes: String!
  calculateEnergyExpenditure(
    input: CalculateEnergyExpenditureInput!
  ): EnergyExpenditureResult!
  createFamily(input: FamilyInput!): Family!
  createFamilySchedule(input: FamilyScheduleInput!): FamilySchedule!
  updateFamilySchedule(input: FamilyScheduleInput!): FamilySchedule!
  calculateMealPlan: String!
  calculateWeeks: String!
}
